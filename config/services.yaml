# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\ApiJsonResponseBuilder:
        arguments:
            $corsAllowedUrls: ['%env(FRONTEND_URL)%']

    app.api_json_response_builder:
            alias: App\Service\ApiJsonResponseBuilder
            public: true

    App\Security\Http\Authentication\CORSAuthenticationSuccessHandler:
        arguments:
            $corsAllowedUrls: ['%env(FRONTEND_URL)%']

    App\Security\Http\Authentication\CORSAuthenticationFailureHandler:
        arguments:
            $corsAllowedUrls: ['%env(FRONTEND_URL)%']

    App\Eimmar\IGDBBundle\Service\ApiConnector:
        arguments:
            $userKey: '%env(IDGB_API_KEY)%'

    App\Eimmar\IsThereAnyDealBundle\Service\ApiConnector:
        arguments:
            $userKey: '%env(IS_THERE_ANY_DEAL_API_KEY)%'

    App\Eimmar\GameSpotBundle\Service\ApiConnector:
        arguments:
            $userKey: '%env(GAMESPOT_API_KEY)%'

    App\EventListener\JWTCreatedListener:
        arguments: [ '@request_stack',  '%env(JWT_REMEMBER_ME_DURATION)%']
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

    App\EventListener\JWTNotFoundEventListener:
        arguments: [['%env(FRONTEND_URL)%']]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_not_found, method: onJWTNotFound }

    FOS\UserBundle\Mailer\MailerInterface: '@fos_user.mailer.twig_swift'

    App\Mailer\TwigSwiftMailer:
        arguments:
            $mailer: '@swiftmailer.mailer'
            $router: '@router'
            $twig: '@twig'
            $params: '@parameter_bag'
            $frontendUrl: '%env(FRONTEND_URL)%'

    App\Controller\AuthController:
        arguments: ['@fos_user.user_manager', '@app.api_json_response_builder', '@fos_user.resetting.form.factory']

    App\Controller\UserController:
        arguments: ['@fos_user.user_manager', '@app.api_json_response_builder', '@fos_user.change_password.form.factory']

    App\Controller\GameController:
        arguments: ['@app.api_json_response_builder', '@App\Repository\GameRepository']

    App\Controller\Admin\IGDBController:
        arguments: ['@App\Service\IGDBGameDataUpdater']
        tags: ['controller.service_arguments']

    sonata.user.admin.group:
        abstract: true
        public: false

    sonata.user.admin.user:
        abstract: true
        public: false
